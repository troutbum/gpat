library(datasets)
library(ggplot2)
library(RColorBrewer)
colors1 <- brewer.pal(9, "Greens")
palette1 <- colorRampPalette(colors1)
colors2 <- brewer.pal(9, "YlOrRd")
palette2 <- colorRampPalette(colors2)
# read in fitness test data
testdata <- read.csv("10AttributesFitnessData.csv")
# create a TO DO list, inverse of test results
todo <- testdata
todo[,2] <- abs(todo[,2] - 10)
# if a Score is 0, make it a 1
for (i in 1:nrow(todo))
{
if (todo[i,2] == 0)  {todo[i,2] <- todo[i,2] + 1}
}
# plot of Fitness Test
#png("fittest.png", width = 960, height = 960)
testplot <- ggplot(testdata, aes(Attribute, Score, fill = factor(Score))) +
geom_bar(stat="identity") +
coord_polar() +
theme(legend.position="none") +
labs(x="June 26, 2014") +
labs(y="") +
scale_y_continuous(limits=c(0,10)) +
labs(title="10 Attributes of Fitness Test Results") +
scale_fill_manual(values=palette1(10)) +
theme(plot.title = element_text(size = rel(2), face="bold"))
testplot
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny)
library(ggplot2)
shinyUI(pageWithSidebar(
headerPanel("GPAT"),
sidebarPanel(
sliderInput("accuracy", "Accuracy", min=1, max=10, value=1),
sliderInput("agility", "Agility", min=1, max=10, value=1),
sliderInput("balance", "Balance", min=1, max=10, value=1),
sliderInput("coordination", "Coordination", min=1, max=10, value=1),
sliderInput("endurance", "Endurance", min=1, max=10, value=1),
sliderInput("flexibility", "Flexibility", min=1, max=10, value=1),
sliderInput("power", "Power", min=1, max=10, value=1),
sliderInput("speed", "Speed", min=1, max=10, value=1),
sliderInput("stamina", "Stamina", min=1, max=10, value=1),
sliderInput("strength", "Strength", min=1, max=10, value=1)
),
mainPanel(
plotOutput('plot')
)
))
library(shiny)
library(ggplot2)
library(datasets)
library(RColorBrewer)
colors1 <- brewer.pal(9, "Greens")
palette1 <- colorRampPalette(colors1)
colors2 <- brewer.pal(9, "YlOrRd")
palette2 <- colorRampPalette
shinyServer(function(input, output) {
output$plot <- reactivePlot(function() {
data.frame(
Name = c("Accuracy",
"Agility",
"Balance",
"Coordination",
"Endurance",
"Flexibility",
"Power",
"Stamina",
"Strength",
"Speed"),
Value = c(input$accuracy,
input$agility,
input$balance,
input$coordination,
input$endurance,
input$flexibility,
input$power,
input$stamina,
input$strength,
input$speed)),
stringsAsFactors=FALSE)
})
p <- ggplot(testdata, aes(Name, Value, fill = factor(Value))) +
geom_bar(stat="identity") +
coord_polar() +
theme(legend.position="none") +
labs(x="June 26, 2014") +
labs(y="") +
scale_y_continuous(limits=c(0,10)) +
labs(title="10 Attributes of Fitness Test Results") +
scale_fill_manual(values=palette1(10)) +
theme(plot.title = element_text(size = rel(2), face="bold"))
print(p)
}, height=700)
})
runApp()
runApp()
runApp()
